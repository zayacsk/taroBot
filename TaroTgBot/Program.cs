using TaroTgBot.Core;
using Telegram.Bot;
using Telegram.Bot.Exceptions;

var cts = new CancellationTokenSource();
var botClient = new TelegramBotClient("7777935189:AAHQ_RHmO_t9Kz_qjbpRQpRAj4u6JbHxkZg");

var userInputs = new Dictionary<long, string>();
var taskQueue = new TaskQueue();
var firebaseService = new FirebaseService("https://tgbotpayment-default-rtdb.firebaseio.com/", "Pn0rL82UBXXUWlsPp88Zajkcc8OBW8ccoKxkGuYk");
var botService = new TelegramBotService(botClient, userInputs, taskQueue, firebaseService);
var queueProcessor = new QueueProcessor(taskQueue, cts.Token);

_ = Task.Run(() => queueProcessor.StartProcessingAsync());

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: —Ç–µ–ø–µ—Ä—å –¥–µ–ª–µ–≥–∞—Ç StartReceiving –ø—Ä–∏–Ω–∏–º–∞–µ—Ç (ITelegramBotClient, Update, CancellationToken)
botClient.StartReceiving(
    async (client, update, token) =>
    {
        // –ü—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        if (update.Message != null)
        {
            string userId = update.Message.Chat.Id.ToString();
            string username = update.Message.Chat.Username;
            // –ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è, –º–æ–∂–Ω–æ –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            string phoneNumber = null;
            await firebaseService.UpdateLastReminderDate(userId, username, phoneNumber, DateTime.UtcNow);
        }

        // –¢–µ–ø–µ—Ä—å HandleUpdateAsync –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å —Ç—Ä–µ–º—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        await botService.HandleUpdateAsync(client, update, token);
    },
    async (client, exception, token) =>
    {
        await botService.HandleErrorAsync(client, exception, token);
    },
    cancellationToken: cts.Token
);

Console.WriteLine($"Bot @{(await botClient.GetMeAsync()).Username} is running...");

// –¢–∞–π–º–µ—Ä –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑ –≤ 24 —á–∞—Å–∞)
var timer = new Timer(async _ =>
{
    try
    {
        var users = await firebaseService.GetAllUsersAsync();
        foreach (var user in users)
        {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ 10 –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
            if (user.LastReminderDate == default(DateTime) || DateTime.UtcNow - user.LastReminderDate >= TimeSpan.FromDays(10))
            {
                try
                {
                    await botClient.SendTextMessageAsync(
                        chatId: long.Parse(user.UserId),
                        text: "üîÆ –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –Ω–∞—à–∏ —Ç–∞—Ä–æ–ª–æ–≥–∏ –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ –±—É–¥—É—â–µ–µ. –í—Å–µ–≥–æ –∑–∞ 50 ‚≠êÔ∏è —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥. –ú—ã –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, —á—Ç–æ–±—ã —Ç—ã –Ω–µ —É–ø—É—Å—Ç–∏–ª —à–∞–Ω—Å —É–∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –ü–æ–ø—Ä–æ–±—É–π —É–∂–µ —Å–µ–≥–æ–¥–Ω—è –∏ –Ω–∞—á–Ω–∏ —Å–≤–æ—ë –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—é!",
                        cancellationToken: cts.Token
                    );

                    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                    await firebaseService.UpdateLastReminderDate(
                        user.UserId,
                        user.Username,
                        user.PhoneNumber,
                        DateTime.UtcNow
                    );
                }
                catch (ApiRequestException apiEx) when (apiEx.ErrorCode == 403 && apiEx.Message.Contains("bot was blocked by the user"))
                {
                    //Console.WriteLine($"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.UserId} - {user.Username} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");
                    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –ø–æ–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.UserId}: {ex.Message}");
                }
            }
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"‚ö†Ô∏è –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: {ex.Message}");
    }
},
null,
TimeSpan.Zero,
TimeSpan.FromHours(24)); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞


Console.ReadLine();
cts.Cancel();